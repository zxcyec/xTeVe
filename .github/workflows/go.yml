# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: darwin
            goarch: "386"
      fail-fast: true
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: install depend
      run: go mod tidy
    
    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch}}
        APPNAME: "mybot_"
      run: |
        export APPNAME=$APPNAME${COMMIT_ID::4}
        echo $APPNAME
        if [ $GOOS = "windows" ]; then export APPNAME="$APPNAME.exe"; fi
        echo $APPNAME
        CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -tags=jsoniter -ldflags="-s -w -extldflags='static'" -o mybot/$APPNAME .
      
    - name: artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: mybot_${{ matrix.goos }}_${{ matrix.goarch}}
        path: mybot/
